metrics-server:
  enabled: true

prometheus-node-exporter:
  resources:
    requests:
      cpu: "25m"
      memory: "50Mi"
    limits:
      cpu: "50m"
      memory: "50Mi"

prometheusOperator:
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 250Mi

# Prometheus settings
prometheus:
  prometheusSpec:
    routePrefix: "/prometheus"
    # allow discovery of third party service monitor
    serviceMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    resources:
      limits:
        cpu: 500m
        memory: 700Mi
      requests:
        cpu: 300m
        memory: 700Mi

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - localhost
    pathType: Prefix
    paths:
      - "/prometheus(/|$)(.*)"

# Alertmanager settings
alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts:
      - localhost
    pathType: Prefix
    paths:
      - "/alertmanager(/|$)(.*)"

  alertmanagerSpec:
    resources:
      requests:
        cpu: "10m"
        memory: "100Mi"
      limits:
        cpu: "100m"
        memory: "100Mi"

# Grafana settings
grafana:
  enabled: true

  adminUser: admin
  adminPassword: admin

  grafana.ini:
    server:
      domain: localhost
      root_url: http://localhost:1080/grafana/
      serve_from_sub_path: true

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts:
      - localhost
    pathType: Prefix
    path: "/grafana(/|$)(.*)"

  downloadDashboards:
    resources: {}

  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL

    resources:
      limits:
        cpu: 150m
        memory: 130Mi
      requests:
        cpu: 10m
        memory: 130Mi

  resources:
    requests:
      cpu: "50m"
      memory: "150Mi"
    limits:
      cpu: "100m"
      memory: "150Mi"
